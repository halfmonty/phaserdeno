{
  "version": 3,
  "sources": ["../../../games/wallhammer/main.ts", "../../../games/wallhammer/scenes/boodloader.ts", "../../../games/wallhammer/gameobjects/blow.ts", "../../../games/wallhammer/gameobjects/brick.ts", "../../../games/wallhammer/gameobjects/particle.ts", "../../../games/wallhammer/gameobjects/player.ts", "../../../games/wallhammer/gameobjects/bat.ts", "../../../games/wallhammer/gameobjects/zombie.ts", "../../../games/wallhammer/gameobjects/turn.ts", "../../../games/wallhammer/gameobjects/coin.ts", "../../../games/wallhammer/gameobjects/lunchbox.ts", "../../../games/wallhammer/gameobjects/platform.ts", "../../../games/wallhammer/scenes/game.ts", "../../../games/wallhammer/scenes/splash.ts", "../../../games/wallhammer/scenes/transition.ts", "../../../games/wallhammer/scenes/outro.ts"],
  "sourcesContent": ["import Phaser from 'https://esm.sh/phaser@4.0.0-rc.4';\r\nimport Bootloader from \"./scenes/boodloader.ts\";\r\nimport Game from \"./scenes/game.ts\";\r\nimport Splash from \"./scenes/splash.ts\";\r\nimport Transition from \"./scenes/transition.ts\";\r\nimport Outro from \"./scenes/outro.ts\";\r\n/*\r\nThis is the main configuration file for the game.\r\n*/\r\nconst config: Phaser.Types.Core.GameConfig = {\r\n  width: 1000,\r\n  height: 800,\r\n  scale: {\r\n    mode: Phaser.Scale.FIT,\r\n    autoCenter: Phaser.Scale.CENTER_BOTH,\r\n  },\r\n  autoRound: false,\r\n  parent: \"game-container\",\r\n  physics: {\r\n    default: \"arcade\",\r\n    arcade: {\r\n      gravity: { x: 0, y: 350 },\r\n      debug: false,\r\n    },\r\n  },\r\n  scene: [ Bootloader, Splash, Transition, Game, Outro ],\r\n};\r\n\r\nexport const game = new Phaser.Game(config);", "export default class Bootloader extends Phaser.Scene {\r\n    progressBar!: Phaser.GameObjects.Graphics;\r\n    loadBar!: Phaser.GameObjects.Graphics;\r\n\r\n    constructor() {\r\n        super({ key: \"bootloader\" });\r\n    }\r\n\r\n    preload() {\r\n        this.createBars();\r\n        this.load.on(\r\n            \"progress\",\r\n            (value: number) => {\r\n                this.progressBar.clear();\r\n                this.progressBar.fillStyle(0xf09937, 1);\r\n                this.progressBar.fillRect(\r\n                    this.cameras.main.width / 4,\r\n                    this.cameras.main.height / 2 - 16,\r\n                    (this.cameras.main.width / 2) * value,\r\n                    16,\r\n                );\r\n            },\r\n            this,\r\n        );\r\n\r\n        this.load.on(\r\n            \"complete\",\r\n            () => {\r\n                this.scene.start(\"splash\");\r\n            },\r\n            this,\r\n        );\r\n\r\n        Array(5)\r\n            .fill(0)\r\n            .forEach((_, i) => {\r\n                this.load.audio(`music${i}`, `assets/wallhammer/sounds/music${i}.mp3`);\r\n            });\r\n        this.load.image(\"pello\", \"assets/wallhammer/images/pello.png\");\r\n        this.load.image(\"landscape\", \"assets/wallhammer/images/landscape.png\");\r\n        this.load.audio(\"build\", \"assets/wallhammer/sounds/build.mp3\");\r\n        this.load.audio(\"coin\", \"assets/wallhammer/sounds/coin.mp3\");\r\n        this.load.audio(\"death\", \"assets/wallhammer/sounds/death.mp3\");\r\n        this.load.audio(\"jump\", \"assets/wallhammer/sounds/jump.mp3\");\r\n        this.load.audio(\"kill\", \"assets/wallhammer/sounds/kill.mp3\");\r\n        this.load.audio(\"land\", \"assets/wallhammer/sounds/land.mp3\");\r\n        this.load.audio(\"lunchbox\", \"assets/wallhammer/sounds/lunchbox.mp3\");\r\n        this.load.audio(\"prize\", \"assets/wallhammer/sounds/prize.mp3\");\r\n        this.load.audio(\"stone_fail\", \"assets/wallhammer/sounds/stone_fail.mp3\");\r\n        this.load.audio(\"stone\", \"assets/wallhammer/sounds/stone.mp3\");\r\n        this.load.audio(\"foedeath\", \"assets/wallhammer/sounds/foedeath.mp3\");\r\n        this.load.audio(\"stage\", \"assets/wallhammer/sounds/stage.mp3\");\r\n        this.load.audio(\"splash\", \"assets/wallhammer/sounds/splash.mp3\");\r\n\r\n        Array(2)\r\n            .fill(0)\r\n            .forEach((_, i) => {\r\n                this.load.image(`brick${i}`, `assets/wallhammer/images/brick${i}.png`);\r\n            });\r\n        Array(5)\r\n            .fill(0)\r\n            .forEach((_, i) => {\r\n                this.load.image(\r\n                    `platform${i + 2}`,\r\n                    `assets/wallhammer/images/platform${i + 2}.png`\r\n                );\r\n            });\r\n        this.load.bitmapFont(\r\n            \"pixelFont\",\r\n            \"assets/wallhammer/fonts/mario.png\",\r\n            \"assets/wallhammer/fonts/mario.xml\"\r\n        );\r\n        this.load.spritesheet(\"walt\", \"assets/wallhammer/images/walt.png\", {\r\n            frameWidth: 64,\r\n            frameHeight: 64,\r\n        });\r\n        Array(5)\r\n            .fill(0)\r\n            .forEach((_, i) => {\r\n                this.load.tilemapTiledJSON(`scene${i}`, `assets/wallhammer/maps/scene${i}.json`);\r\n            });\r\n        this.load.image(\"softbricks\", \"assets/wallhammer/maps/softbricks.png\");\r\n        this.load.image(\"bricks\", \"assets/wallhammer/maps/bricks.png\");\r\n        this.load.image(\"background\", \"assets/wallhammer/maps/background.png\");\r\n        this.load.image(\"chain\", \"assets/wallhammer/images/chain.png\");\r\n\r\n        this.load.spritesheet(\"bat\", \"assets/wallhammer/images/bat.png\", {\r\n            frameWidth: 32,\r\n            frameHeight: 32,\r\n        });\r\n        this.load.spritesheet(\"zombie\", \"assets/wallhammer/images/zombie.png\", {\r\n            frameWidth: 64,\r\n            frameHeight: 64,\r\n        });\r\n        this.load.spritesheet(\"coin\", \"assets/wallhammer/images/coin.png\", {\r\n            frameWidth: 64,\r\n            frameHeight: 64,\r\n        });\r\n        this.load.spritesheet(\"lunchbox\", \"assets/wallhammer/images/lunchbox.png\", {\r\n            frameWidth: 64,\r\n            frameHeight: 64,\r\n        });\r\n        this.load.spritesheet(\"hammer\", \"assets/wallhammer/images/hammer.png\", {\r\n            frameWidth: 64,\r\n            frameHeight: 64,\r\n        });\r\n        this.load.spritesheet(\"speed\", \"assets/wallhammer/images/speed.png\", {\r\n            frameWidth: 64,\r\n            frameHeight: 64,\r\n        });\r\n        this.load.spritesheet(\"boots\", \"assets/wallhammer/images/boots.png\", {\r\n            frameWidth: 64,\r\n            frameHeight: 64,\r\n        });\r\n        this.load.spritesheet(\"star\", \"assets/wallhammer/images/star.png\", {\r\n            frameWidth: 64,\r\n            frameHeight: 64,\r\n        });\r\n\r\n        this.load.bitmapFont(\r\n            \"hammerfont\",\r\n            \"assets/wallhammer/fonts/hammer.png\",\r\n            \"assets/wallhammer/fonts/hammer.xml\"\r\n        );\r\n        \r\n        this.registry.set(\"score\", 0);\r\n        this.registry.set(\"coins\", 0);\r\n    }\r\n    createBars() {\r\n        this.loadBar = this.add.graphics();\r\n        this.loadBar.fillStyle(0xca6702, 1);\r\n        this.loadBar.fillRect(\r\n            this.cameras.main.width / 4 - 2,\r\n            this.cameras.main.height / 2 - 18,\r\n            this.cameras.main.width / 2 + 4,\r\n            20\r\n        );\r\n        this.progressBar = this.add.graphics();\r\n    }\r\n}\r\n", "export default class Blow extends Phaser.GameObjects.Rectangle {\r\n\r\n    constructor(scene: Phaser.Scene, x: number, y: number, width = 32, height = 32, type = \"\") {\r\n        super(scene, x, y, width, height, 0xffffff);\r\n        this.type = type;\r\n        this.y = y;\r\n        this.scene.add.existing(this);\r\n        this.scene.physics.add.existing(this);\r\n        (this.body as Phaser.Physics.Arcade.Body).setAllowGravity(false);\r\n        this.scene.tweens.add({\r\n            targets: this,\r\n            duration: 300,\r\n            scale: { from: 1, to: 0 },\r\n            onComplete: () => {\r\n                this.destroy();\r\n            }\r\n        });\r\n    }\r\n}", "    export default class Brick extends Phaser.GameObjects.Sprite {\r\n\r\n        constructor(scene: Phaser.Scene, x: number, y: number, name = \"brick0\") {\r\n            super(scene, x, y, name);\r\n            this.name = name;\r\n\r\n            this.scene.add.existing(this);\r\n            this.scene.physics.add.existing(this);\r\n            (this.body as Phaser.Physics.Arcade.Body).immovable = true;\r\n            (this.body as Phaser.Physics.Arcade.Body).moves = false;\r\n            this.scene.tweens.add({\r\n                targets: this,\r\n                duration: 50,\r\n                x: { from: this.x, to: this.x + Phaser.Math.Between(-7, 7) },\r\n                y: { from: this.y, to: this.y + Phaser.Math.Between(-7, 7) },\r\n                repeat: 5,\r\n            });\r\n        }\r\n    }", "export class Smoke extends Phaser.GameObjects.Rectangle {\r\n    color: number;\r\n    constructor(scene: Phaser.Scene, x: number, y: number, width: number, height: number, color = 0xfffffff, gravity = false) {\r\n        width = width ?? Phaser.Math.Between(10, 25);\r\n        height = height ?? Phaser.Math.Between(10, 25);\r\n\r\n        super(scene, x, y, width, height, color);\r\n        scene.add.existing(this);\r\n        this.color = color\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.scene.tweens.add({\r\n            targets: this,\r\n            duration: 800,\r\n            scale: { from: 1, to: 0 },\r\n            onComplete: () => {\r\n                this.destroy();\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nexport enum Colors {\r\n    redbrick    = 0xa13000,\r\n    orangebrick = 0xb03e00,\r\n    goldenbrick = 0xb06f00,\r\n    greybrick   = 0x4d4d4d,\r\n}\r\n\r\nexport class RockSmoke extends Phaser.GameObjects.Rectangle {\r\n\r\n    constructor(scene: Phaser.Scene, x: number, y: number, width?: number, height?: number, color = 0xffeaab, gravity = false) {\r\n        width = width ?? Phaser.Math.Between(30, 55);\r\n        height = height ?? Phaser.Math.Between(30, 55);\r\n        \r\n        super(scene, x, y, width, height, color);\r\n        this.scene.add.existing(this);\r\n        this.scene.physics.add.existing(this);\r\n        (this.body as Phaser.Physics.Arcade.Body).setAllowGravity(false);\r\n        (this.body as Phaser.Physics.Arcade.Body).setVelocityY(-100);\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.scene.tweens.add({\r\n            targets: this,\r\n            duration: 800,\r\n            scale: { from: 1, to: 0 },\r\n            onComplete: () => {\r\n                this.destroy();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport class JumpSmoke extends Phaser.GameObjects.Rectangle {\r\n\r\n    constructor(scene: Phaser.Scene, x: number, y: number, width?: number, height?: number, color = 0xffeaab, gravity = false) {\r\n        width = width ?? Phaser.Math.Between(10, 25);\r\n        height = height ?? Phaser.Math.Between(10, 25);\r\n\r\n        super(scene, x, y, width, height, color);\r\n        this.scene.add.existing(this);\r\n        this.scene.physics.add.existing(this);\r\n        (this.body as Phaser.Physics.Arcade.Body).setAllowGravity(false);\r\n        (this.body as Phaser.Physics.Arcade.Body).setVelocityX(Phaser.Math.Between(-20, 20));\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.scene.tweens.add({\r\n            targets: this,\r\n            duration: 800,\r\n            scale: { from: 1, to: 0},\r\n            onComplete: () => {\r\n                this.destroy();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport class Debris extends Phaser.GameObjects.Rectangle {\r\n\r\n    constructor(scene: Phaser.Scene, x: number, y: number, width?: number, height?: number, color = 0xffeaab, gravity = false) {\r\n        width = width ?? Phaser.Math.Between(15, 30);\r\n        height = height ?? Phaser.Math.Between(15, 30);\r\n\r\n        super(scene, x, y + 5, width, height, color)\r\n        this.scene.add.existing(this);\r\n        this.scene.physics.add.existing(this);\r\n        (this.body as Phaser.Physics.Arcade.Body).setAllowGravity(false);\r\n        (this.body as Phaser.Physics.Arcade.Body).setVelocityX(Phaser.Math.Between(-50, 50));\r\n        (this.body as Phaser.Physics.Arcade.Body).setVelocityY(width * height);\r\n    }\r\n}", "import Blow from \"./blow.ts\";\r\nimport Brick from \"./brick.ts\";\r\nimport { JumpSmoke } from \"./particle.ts\";\r\n\r\nenum playerAnimation {\r\n    startidle = \"startidle\",\r\n    idle      = \"playeridle\",\r\n    walk      = \"playerwalk\",\r\n    jump      = \"playerjump\",\r\n    hammer    = \"playerhammer\",\r\n    build     = \"playerbuild\",\r\n    dead      = \"playerdead\"\r\n}\r\n\r\nexport default class Player extends Phaser.GameObjects.Sprite {\r\n    spaceBar: Phaser.Input.Keyboard.Key;\r\n    down: Phaser.Input.Keyboard.Key;\r\n    right: boolean;\r\n    cursor: Phaser.Types.Input.Keyboard.CursorKeys;\r\n    jumping: boolean;\r\n    building: boolean;\r\n    falling: boolean;\r\n    mjolnir: boolean;\r\n    walkVelocity: number;\r\n    jumpVelocity: number;\r\n    invincible: boolean;\r\n    health: number;\r\n    dead: boolean;\r\n    W: Phaser.Input.Keyboard.Key;\r\n    A: Phaser.Input.Keyboard.Key;\r\n    S: Phaser.Input.Keyboard.Key;\r\n    D: Phaser.Input.Keyboard.Key;\r\n\r\n\r\n    constructor(scene: Phaser.Scene, x: number, y: number, health = 10) {\r\n        super(scene, x, y, \"walt\");\r\n        this.setOrigin(0.5);\r\n\r\n        this.scene.add.existing(this);\r\n        this.scene.physics.add.existing(this);\r\n        this.cursor = this.scene.input.keyboard?.createCursorKeys()!;\r\n        this.spaceBar = this.scene.input.keyboard?.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE)!;\r\n        this.down = this.scene.input.keyboard?.addKey(Phaser.Input.Keyboard.KeyCodes.DOWN)!;\r\n        this.right = true;\r\n        (this.body as Phaser.Physics.Arcade.Body).setGravityY(100);\r\n        (this.body as Phaser.Physics.Arcade.Body).setSize(48, 60);\r\n        this.init();\r\n        this.jumping = false;\r\n        this.building = false;\r\n        this.falling = false;\r\n        this.mjolnir = false;\r\n        this.walkVelocity = 200;\r\n        this.jumpVelocity = -400;\r\n        this.invincible = false;\r\n        this.health = health;\r\n        this.dead = false;\r\n        this.W = this.scene.input.keyboard?.addKey(Phaser.Input.Keyboard.KeyCodes.W)!;\r\n        this.A = this.scene.input.keyboard?.addKey(Phaser.Input.Keyboard.KeyCodes.A)!;\r\n        this.S = this.scene.input.keyboard?.addKey(Phaser.Input.Keyboard.KeyCodes.S)!;\r\n        this.D = this.scene.input.keyboard?.addKey(Phaser.Input.Keyboard.KeyCodes.D)!;\r\n    }\r\n\r\n    init() {\r\n        this.createAnim(this.scene, playerAnimation.startidle, 0, 1, 3, -1);\r\n        this.createAnim(this.scene, playerAnimation.idle, 2, 3, 3, -1);\r\n        this.createAnim(this.scene, playerAnimation.walk, 4, 6, 10, -1);\r\n        this.createAnim(this.scene, playerAnimation.jump, 4, 4, 1);\r\n        this.createAnim(this.scene, playerAnimation.hammer, 7, 8, 10);\r\n        this.createAnim(this.scene, playerAnimation.build, 9, 10, 10, 2);\r\n        this.createAnim(this.scene, playerAnimation.dead, 11, 16, 5);\r\n\r\n        this.anims.play(playerAnimation.startidle, true);\r\n        this.on(\"animationcomplete\", this.animationComplete, this);\r\n    }\r\n\r\n    createAnim(scene: Phaser.Scene, key: string, start: number, end: number, frameRate: number, repeat?: number) {\r\n        scene.anims.create({\r\n            key,\r\n            frames: this.scene.anims.generateFrameNumbers(\"walt\", { start, end }),\r\n            frameRate,\r\n            repeat\r\n        });\r\n    }\r\n\r\n    override update() {\r\n        if (this.dead) return;\r\n        if (this.jumping) {\r\n            if ((this.body as Phaser.Physics.Arcade.Body).velocity.y >= 0) {\r\n                (this.body as Phaser.Physics.Arcade.Body).setGravityY(700);\r\n                this.falling = true;\r\n            }\r\n        }\r\n\r\n        if (\r\n            (Phaser.Input.Keyboard.JustDown(this.cursor.up) || \r\n            Phaser.Input.Keyboard.JustDown(this.W)) &&\r\n            (this.body as Phaser.Physics.Arcade.Body).blocked.down\r\n        ) {\r\n            this.building = false;\r\n            (this.body as Phaser.Physics.Arcade.Body).setVelocity(this.jumpVelocity);\r\n            (this.body as Phaser.Physics.Arcade.Body).setGravityY(400);\r\n            this.anims.play(playerAnimation.jump, true);\r\n            //@ts-ignore\r\n            this.scene.playAudio(\"jump\"); // TODO: fix types\r\n            this.jumping = true;\r\n            this.jumpSmoke();\r\n        } else if (this.cursor.right.isDown || this.D.isDown) {\r\n            this.building = false;\r\n            if ((this.body as Phaser.Physics.Arcade.Body).blocked.down) {\r\n                this.anims.play(playerAnimation.walk, true);\r\n            }\r\n            this.right = true;\r\n            this.flipX = (this.body as Phaser.Physics.Arcade.Body).velocity.x < 0;\r\n            (this.body as Phaser.Physics.Arcade.Body).setVelocityX(this.walkVelocity);\r\n        } else if ( this.cursor.left.isDown || this.A.isDown) {\r\n            this.building = false;\r\n            if((this.body as Phaser.Physics.Arcade.Body).blocked.down) {\r\n                this.anims.play(playerAnimation.walk, true);\r\n            }\r\n            this.right = false;\r\n            this.flipX = true;\r\n            (this.body as Phaser.Physics.Arcade.Body).setVelocityX(-this.walkVelocity);\r\n        } else {\r\n            if((this.body as Phaser.Physics.Arcade.Body).blocked.down) {\r\n                if (this.jumping) {\r\n                    // @ts-ignore TODO: fix\r\n                    this.scene.playAudio(\"land\");\r\n                    this.landSmoke();\r\n                }\r\n                this.jumping = false;\r\n                this.falling = false;\r\n\r\n                if(!this.building) this.anims.play(playerAnimation.idle, true);\r\n            }\r\n\r\n            (this.body as Phaser.Physics.Arcade.Body).setVelocityX(0);\r\n        }\r\n\r\n        if (Phaser.Input.Keyboard.JustDown(this.spaceBar)) this.hammerBlow();\r\n\r\n        if (\r\n            Phaser.Input.Keyboard.JustDown(this.cursor.down) ||\r\n            Phaser.Input.Keyboard.JustDown(this.S)\r\n        ) this.buildBlock();\r\n    }\r\n\r\n    landSmoke() {\r\n        this.jumpSmoke(20);\r\n    }\r\n\r\n    jumpSmoke(offsetY = 10, varX?: number) {\r\n        Array(Phaser.Math.Between(3, 6))\r\n            .fill(0)\r\n            .forEach((_i) => {\r\n                const offset = varX || Phaser.Math.Between(-1, 1) > 0 ? 1 : -1;\r\n                varX = varX || Phaser.Math.Between(0, 20);\r\n                new JumpSmoke(this.scene, this.x + offset * varX, this.y + offsetY)\r\n            });\r\n    }\r\n\r\n    buildBlock() {\r\n        this.building = true;\r\n        this.anims.play(playerAnimation.build, true);\r\n        // @ts-ignore TODO: fix\r\n        this.scene.playAudio(\"build\")\r\n        const offsetX = this.right ? 64 : -64;\r\n        const offsetY = this.jumpVelocity === -400 ? 0 : -128;\r\n        this.buildSmoke(32, offsetX);\r\n        // @ts-ignore TODO: fix types\r\n        this.scene.bricks.add(\r\n            new Brick(this.scene, this.x + offsetX, this.y + offsetY)\r\n        );\r\n    }\r\n\r\n    buildSmoke(offsetY = 10, offsetX: number) {\r\n        Array(Phaser.Math.Between(8, 14))\r\n            .fill(0)\r\n            .forEach((i) => {\r\n                const varX = Phaser.Math.Between(-20, 20);\r\n                new JumpSmoke(this.scene, this.x + (offsetX + varX), this.y + offsetY);\r\n            });\r\n    }\r\n\r\n    hammerBlow() {\r\n        this.building = true;\r\n        this.anims.play(playerAnimation.hammer, true);\r\n        const offsetX = this.right ? 32 : -32;\r\n        const size = this.mjolnir ? 128 : 32;\r\n        // @ts-ignore TODO: fix types\r\n        this.scene.blows.add(\r\n            new Blow(this.scene, this.x + offsetX, this.y, size, size)\r\n        );\r\n    }\r\n\r\n    turn() {\r\n        this.right = !this.right;\r\n    }\r\n\r\n    animationComplete(animation: Phaser.Animations.Animation, frame: Phaser.Animations.AnimationFrame) {\r\n        if (animation.key === \"playerground\") {\r\n            this.anims.play(\"playeridle\", true);\r\n        }\r\n\r\n        if (animation.key === playerAnimation.hammer || animation.key === playerAnimation.build) {\r\n            this.building = false;\r\n            this.anims.play(this.jumping? playerAnimation.jump : playerAnimation.idle, true);\r\n        }\r\n    }\r\n\r\n    hit() {\r\n        this.health--;\r\n        this.anims.play(playerAnimation.dead, true);\r\n        (this.body as Phaser.Physics.Arcade.Body).enable = false;\r\n        if (this.health === 0 ) this.die();\r\n    }\r\n\r\n    die() {\r\n        this.dead = true;\r\n        this.anims.play(playerAnimation.dead, true);\r\n        (this.body as Phaser.Physics.Arcade.Body).immovable = true;\r\n        (this.body as Phaser.Physics.Arcade.Body).moves = false;\r\n        // @ts-ignore\r\n        this.scene.restartScene(); // TODO: type fix\r\n    }\r\n\r\n    applyPrize(prize: string) {\r\n        switch (prize) {\r\n            case \"speed\":\r\n                this.walkVelocity = 330;\r\n                this.flashPlayer();\r\n                break;\r\n            case \"hammer\":\r\n                this.mjolnir = true;\r\n                this.flashPlayer();\r\n                break;\r\n            case \"boots\":\r\n                this.jumpVelocity = -600;\r\n                this.flashPlayer();\r\n                break;\r\n            case \"coin\":\r\n                // @ts-ignore TODO: fix types\r\n                this.scene.updateCoins();\r\n                break;\r\n            case \"star\":\r\n                this.invincible = true;\r\n                this.scene.tweens.add({\r\n                    targets: this,\r\n                    duration: 300,\r\n                    alpha: { from: 0.7, to: 1 },\r\n                    repeat: -1\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    flashPlayer() {\r\n        this.scene.tweens.add({\r\n            targets: this,\r\n            duration: 50,\r\n            scale: { from: 1.2, to: 1 },\r\n            repeat: 10\r\n        });\r\n    }\r\n}", "export default class Bat extends Phaser.Physics.Arcade.Sprite {\r\n    direction: number;\r\n    dead: boolean = false;\r\n\r\n    constructor(scene: Phaser.Scene, x: number, y: number, type: string = 'right') {\r\n        super(scene, x, y, \"bat\"); \r\n        this.name = \"bat\";\r\n        this.scene.physics.add.existing(this);\r\n        this.scene.physics.world.enable(this);\r\n        this.scene.add.existing(this);\r\n        this.direction = type === \"right\" ? 1 : -1;\r\n\r\n        this.init();\r\n    }\r\n\r\n    /* Inits the animations for the bat and starts the movement. We also add a listener for the 'animationcomplete' event */\r\n    init() {\r\n        this.scene.anims.create({\r\n            key: this.name,\r\n            frames: this.scene.anims.generateFrameNumbers(this.name, {\r\n                start: 0,\r\n                end: 1,\r\n            }),\r\n            frameRate: 5,\r\n            repeat: -1,\r\n        });\r\n\r\n        this.scene.anims.create({\r\n            key: this.name + \"death\",\r\n            frames: this.scene.anims.generateFrameNumbers(this.name, {\r\n                start: 2,\r\n                end: 5,\r\n            }),\r\n            frameRate: 5\r\n        });\r\n\r\n        this.anims.play(this.name, true);\r\n        this.body?.velocity.set(this.direction * 150);\r\n        this.flipX = this.direction > 0;\r\n        this.on(\"animationcomplete\", this.animationComplete, this);\r\n    }\r\n\r\n    override update() {}\r\n\r\n    // Turn the bat around and changes the direction\r\n    turn() {\r\n        this.direction = -this.direction;\r\n        this.flipX = this.direction > 0;\r\n        this.body?.velocity.set(this.direction * 150);\r\n    }\r\n\r\n    // This kills the bad 'nicely' by playing the death animation\r\n    death() {\r\n        this.dead = true;\r\n        if(this.body) this.body.enable = false;\r\n        this.rotation = 0;\r\n        this.anims.play(this.name + \"death\");\r\n\r\n    }\r\n\r\n    // This is called when any animation is completed. If the death animation is completed, then destroy the bat. \r\n    animationComplete(animation: Phaser.Animations.Animation, _frame: Phaser.Animations.AnimationFrame) {\r\n        if (animation.key === this.name + \"death\") {\r\n            this.destroy();\r\n        }\r\n    }\r\n}", "export default class Zombie extends Phaser.Physics.Arcade.Sprite {\r\n    direction: number;\r\n    dead: boolean = false;\r\n\r\n    constructor(scene: Phaser.Scene, x: number, y: number, type: string = \"right\") {\r\n        super(scene, x, y, \"zombie\");\r\n        this.name = \"zombie\";\r\n        this.scene = scene;\r\n        this.scene.physics.add.existing(this);\r\n        this.scene.physics.world.enable(this);\r\n        this.scene.add.existing(this);\r\n        // this.body?.setAllowGravity(true);\r\n        this.direction = type === \"right\" ? -1 : 1;\r\n\r\n        this.init();\r\n    }\r\n\r\n    // Inits animation for the zombies and starts the movement\r\n    init() {\r\n        this.scene.anims.create({\r\n            key: this.name,\r\n            frames: this.scene.anims.generateFrameNumbers(this.name, {\r\n                start: 0,\r\n                end: 2,\r\n            }),\r\n            frameRate: 5,\r\n            repeat: -1,\r\n        });\r\n\r\n        this.scene.anims.create({\r\n            key: this.name + \"death\",\r\n            frames: this.scene.anims.generateFrameNumbers(this.name, {\r\n                start: 3,\r\n                end:5\r\n            }),\r\n            frameRate: 5\r\n        });\r\n\r\n        this.anims.play(this.name, true);\r\n        this.body?.velocity.set(this.direction * 100);\r\n        this.flipX = this.direction < 0;\r\n        this.on(\"animationcomplete\", this.animationComplete, this);\r\n    }\r\n\r\n    // Turns the zombie around and changes the direction\r\n    turn() {\r\n        this.direction = -this.direction;\r\n        this.flipX = this.direction < 0;\r\n        this.body?.velocity.set(this.direction * 100);\r\n    }\r\n\r\n    // This kills the zombie \"nicely\" by playing the death animation\r\n    death() {\r\n        this.dead = true;\r\n        if (this.body) this.body.enable = true\r\n        this.rotation = 0;\r\n        this.anims.play(this.name + \"death\");\r\n    }\r\n\r\n    // When death animation is completed, then destroy the zombie\r\n    animationComplete(animation: Phaser.Animations.Animation, _frame: Phaser.Animations.AnimationFrame) {\r\n        if(animation.key === this.name + \"death\") {\r\n            this.destroy();\r\n        }\r\n    }\r\n}", "export default class Turn extends Phaser.GameObjects.Rectangle {\r\n    constructor(scene: Phaser.Scene, x: number, y: number, width: number = 32, height: number = 32, type: string = \"\") {\r\n        super(scene, x, y, width, height, 0xffffff);\r\n        this.type = type;\r\n        this.setAlpha(0);\r\n        this.x = x;\r\n        this.y = y;\r\n        scene.add.existing(this);\r\n        scene.physics.add.existing(this);\r\n\r\n        (this.body as Phaser.Physics.Arcade.Body).immovable = true;\r\n        (this.body as Phaser.Physics.Arcade.Body).moves = false;\r\n    }\r\n\r\n    disable() {\r\n        this.visible = false;\r\n        this.destroy();\r\n    }\r\n\r\n    override destroy() {\r\n        super.destroy();\r\n    }\r\n}", "import Game from \"../scenes/game.ts\";\r\n\r\nexport default class Coin extends Phaser.GameObjects.Sprite {\r\n    disabled: boolean;\r\n    declare scene: Game;\r\n\r\n    constructor(scene: Phaser.Scene, x: number, y: number, name = \"coin\") {\r\n        super(scene, x, y, name);\r\n        this.name = name;\r\n        this.setScale(0.7);\r\n        this.setOrigin(0.5);\r\n\r\n        this.scene.add.existing(this);\r\n        this.scene.physics.add.existing(this);\r\n\r\n        (this.body as Phaser.Physics.Arcade.Body).immovable = true;\r\n        (this.body as Phaser.Physics.Arcade.Body).moves = false;\r\n        this.disabled = false;\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.scene.anims.create({\r\n            key: this.name,\r\n            frames: this.scene.anims.generateFrameNumbers(this.name, {\r\n                start: 0,\r\n                end: 7,\r\n            }),\r\n            frameRate: 10,\r\n            repeat: -1,\r\n        });\r\n\r\n        this.anims.play(this.name, true);\r\n        this.scene.tweens.add({\r\n            targets: this,\r\n            duration: 500,\r\n            y: this.y - 20,\r\n            repeat: -1,\r\n            yoyo: true,\r\n        });\r\n    }\r\n\r\n    pick() {\r\n        const { x, y } = this.scene.cameras.main.getWorldPoint(\r\n            this.scene.scoreCoinsLogo.x,\r\n            this.scene.scoreCoinsLogo.y\r\n        );\r\n\r\n        this.disabled = true;\r\n        this.scene.tweens.add({\r\n            targets: this,\r\n            duration: 500,\r\n            x: { from: this.x, to: x },\r\n            y: { from: this.y, to: y },\r\n            scale: { from: 0.7, to: 0.5 },\r\n            onComplete: () => {\r\n                this.destroy();\r\n            }\r\n        });\r\n    }\r\n}", "export default class LunchBox extends Phaser.GameObjects.Sprite {;\r\n    disabled: boolean;\r\n    prizeSprite: Phaser.GameObjects.Sprite | undefined;\r\n\r\n    constructor(scene: Phaser.Scene, x: number, y: number, name:string = \"lunchbox\") {\r\n        super(scene, x, y, name);\r\n        this.scene = scene;\r\n        this.name = name;\r\n        this.setScale(1);\r\n        this.setOrigin(0.5);\r\n\r\n        this.body = this.body as Phaser.Physics.Arcade.Body;\r\n        scene.add.existing(this);\r\n        scene.physics.add.existing(this);\r\n\r\n        (this.body as Phaser.Physics.Arcade.Body).immovable = true;\r\n        (this.body as Phaser.Physics.Arcade.Body).moves = false;\r\n        this.disabled = false;\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.scene.anims.create({\r\n            key: this.name,\r\n            frames: this.scene.anims.generateFrameNumbers(this.name, {\r\n                start: 0,\r\n                end: 0,\r\n            }),\r\n            frameRate: 1\r\n        });\r\n\r\n        this.scene.anims.create({\r\n            key: this.name + \"opened\",\r\n            frames: this.scene.anims.generateFrameNumbers(this.name, {\r\n                start: 1,\r\n                end: 1,\r\n            }),\r\n            frameRate: 1\r\n        });\r\n\r\n        this.anims.play(this.name, true);\r\n        this.scene.tweens.add({\r\n            targets: this,\r\n            duration: 500,\r\n            y: this.y -20,\r\n            repeat: -1,\r\n            yoyo: true\r\n        });\r\n    }\r\n\r\n    pick() {\r\n        this.anims.play(this.name + \"opened\", true);\r\n        this.showPrize();\r\n        this.disabled = true;\r\n        this.scene.time.delayedCall(\r\n            1000,\r\n            () => {\r\n                this.destroy();\r\n                this.prizeSprite?.destroy();\r\n            },\r\n            undefined,\r\n            this\r\n        );\r\n    }\r\n\r\n    showPrize() {\r\n        const prize = [\"boots\", \"hammer\", \"coin\", \"star\", \"speed\"];\r\n        const selectedPrize = Phaser.Math.RND.pick(prize);\r\n        (this.scene as unknown as any).player.applyPrize(selectedPrize); // TODO: fix types here\r\n        this.prizeSprite = this.scene.add\r\n            .sprite(this.x, this.y, selectedPrize)\r\n            .setOrigin(0.5)\r\n            .setScale(0.8);\r\n        this.scene.tweens.add({\r\n            targets: this.prizeSprite,\r\n            duration: 500,\r\n            y: { from: this.y, to: this.y - 64},\r\n            onComplete: () => {\r\n                // @ts-ignore\r\n                this.scene.playAudio(\"prize\"); // TODO: fix types here\r\n            }\r\n        })\r\n    }\r\n}", "export default class Platform extends Phaser.GameObjects.Container {\r\n    chain: Phaser.GameObjects.Sprite;\r\n    platform: Phaser.GameObjects.Sprite;\r\n\r\n    constructor(scene: Phaser.Scene, x: number, y: number, size = 4, demo = false) {\r\n        super(scene, x, y);\r\n        this.x = x;\r\n        this.y = y;\r\n        this.scene.add.existing(this);\r\n        this.scene.physics.add.existing(this);\r\n        (this.body as Phaser.Physics.Arcade.Body).setAllowGravity(false);\r\n        (this.body as Phaser.Physics.Arcade.Body).setBounce(1);\r\n        (this.body as Phaser.Physics.Arcade.Body).setSize(size * 64, 64);\r\n        (this.body as Phaser.Physics.Arcade.Body).setOffset(-2, -2);\r\n        (this.body as Phaser.Physics.Arcade.Body).immovable = true;\r\n        (this.body as Phaser.Physics.Arcade.Body).moves = false;\r\n        this.chain = new Phaser.GameObjects.Sprite(\r\n            this.scene,\r\n            size * 32 - 32,\r\n            -2048,\r\n            \"chain\"\r\n        ).setOrigin(0);\r\n        this.add(this.chain);\r\n        this.platform = new Phaser.GameObjects.Sprite(\r\n            this.scene,\r\n            0,\r\n            0,\r\n            \"platform\" + size\r\n        ).setOrigin(0);\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        const type = Phaser.Math.Between(0, 7);\r\n        let offsetX = this.x;\r\n        let offsetY = this.y;\r\n\r\n        switch (type) {\r\n            case 0:\r\n                offsetX = Phaser.Math.Between(-50, 50);\r\n                break;\r\n            case 1:\r\n                offsetY = Phaser.Math.Between(-50, 50);\r\n                break;\r\n            case 2:\r\n                offsetX = Phaser.Math.Between(-100, 100);\r\n                offsetY = Phaser.Math.Between(-100, 100);\r\n                break;\r\n            case 3:\r\n            case 4:\r\n            case 5:\r\n            case 6:\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.scene.tweens.add({\r\n            targets: this,\r\n            duration: Phaser.Math.Between(4000, 6000),\r\n            x: { from: this.x, to: offsetX },\r\n            y: { from: this.y, to: offsetY },\r\n            repeat: -1,\r\n            yoyo: true\r\n        });\r\n    }\r\n}", "import Player from \"../gameobjects/player.ts\";\r\nimport { Debris } from \"../gameobjects/particle.ts\";\r\nimport Bat from \"../gameobjects/bat.ts\";\r\nimport Zombie from \"../gameobjects/zombie.ts\";\r\nimport Turn from \"../gameobjects/turn.ts\";\r\nimport Coin from \"../gameobjects/coin.ts\";\r\nimport LunchBox from \"../gameobjects/lunchbox.ts\";\r\nimport Platform from \"../gameobjects/platform.ts\";\r\nimport Blow from \"../gameobjects/blow.ts\";\r\nimport Brick from \"../gameobjects/brick.ts\";\r\n\r\nexport default class Game extends Phaser.Scene {\r\n    player: Player | null;\r\n    score: number;\r\n    scoreText:  string | null;\r\n    name!: string;\r\n    number!: number;\r\n    width!: number;\r\n    height!: number;\r\n    center_width!: number;\r\n    center_height!: number;\r\n    scoreCoins!: Phaser.GameObjects.BitmapText;\r\n    scoreCoinsLogo!: Phaser.GameObjects.Sprite;\r\n    tileSetBg: Phaser.Tilemaps.Tileset | null = null;\r\n    tileMap!: Phaser.Tilemaps.Tilemap;\r\n    tileSet: Phaser.Tilemaps.Tileset | null = null;\r\n    objectsLayer: Phaser.Tilemaps.ObjectLayer | null = null;\r\n    platform!: Phaser.Tilemaps.TilemapLayer;\r\n\r\n    batGroup!: Phaser.GameObjects.Group;\r\n    zombieGroup!: Phaser.GameObjects.Group;\r\n    foesGroup!: Phaser.GameObjects.Group;\r\n    turnGroup!: Phaser.GameObjects.Group;\r\n    exitGroup!: Phaser.GameObjects.Group;\r\n    platformGroup!: Phaser.GameObjects.Group;\r\n    lunchBoxGroup!: Phaser.GameObjects.Group;\r\n    bricks!: Phaser.GameObjects.Group;\r\n    blows!: Phaser.GameObjects.Group;\r\n    coins!: Phaser.GameObjects.Group;\r\n    elements!: Phaser.GameObjects.Group;\r\n    audios!: Record<string, Phaser.Sound.NoAudioSound | Phaser.Sound.HTML5AudioSound | Phaser.Sound.WebAudioSound>;\r\n    theme?: Phaser.Sound.NoAudioSound | Phaser.Sound.HTML5AudioSound | Phaser.Sound.WebAudioSound;\r\n\r\n    constructor() {\r\n        super({ key: \"game\" });\r\n        this.player = null;\r\n        this.score = 0;\r\n        this.scoreText = null;\r\n    }\r\n\r\n    init(data: {name: string, number: number}) {\r\n        this.name = data.name;\r\n        this.number = data.number;\r\n    }\r\n\r\n    preload() {}\r\n\r\n    create() {\r\n        this.width = +this.sys.game.config.width;\r\n        this.height = +this.sys.game.config.height;\r\n        this.center_width = this.width / 2;\r\n        this.center_height = this.height / 2;\r\n        this.cameras.main.setBackgroundColor(0x62a2bf);\r\n        this.add.tileSprite(0, 1000, 1024 * 10, 512, \"landscape\").setOrigin(0.5);\r\n        this.createMap();\r\n\r\n        this.cameras.main.setBounds(0, 0, 20920 * 2, 20080 * 2);\r\n        this.physics.world.setBounds(0, 0, 20920 * 2, 20080 * 2);\r\n        this.addPlayer();\r\n\r\n        this.cameras.main.startFollow(this.player!, true, 0.05, 0.05, 0, 240);\r\n        this.physics.world.enable([this.player!]);\r\n        this.addScore();\r\n        this.loadAudios();\r\n        this.playMusic();\r\n    }\r\n\r\n    addScore() {\r\n        this.scoreCoins = this.add\r\n            .bitmapText(75, 10, \"pixelFont\", \"x0\", 30)\r\n            .setDropShadow(0, 4, 0x222222, 0.9)\r\n            .setOrigin(0)\r\n            .setScrollFactor(0);\r\n        this.scoreCoinsLogo = this.add\r\n            .sprite(50, 25, \"coin\")\r\n            .setScale(1)\r\n            .setOrigin(0.5)\r\n            .setScrollFactor(0);\r\n        this.anims.create({\r\n            key: \"coinscore\",\r\n            frames: this.anims.generateFrameNumbers(\"coin\", { start: 0, end: 7 }),\r\n            frameRate: 8,\r\n        });\r\n        this.scoreCoinsLogo.play({ key: \"coinscore\", repeat: -1 });\r\n    }\r\n\r\n    createMap() {\r\n        this.tileMap = this.make.tilemap({\r\n            key: \"scene\" + this.number,\r\n            tileWidth: 64,\r\n            tileHeight: 64\r\n        });\r\n        console.log(this.tileMap);\r\n        this.tileSetBg = this.tileMap.addTilesetImage(\"background\");\r\n        if (!this.tileSetBg) throw(\"Background tileset missing\");\r\n        this.tileMap.createLayer(\"background\", this.tileSetBg);\r\n\r\n        this.tileSet = this.tileMap.addTilesetImage(\"softbricks\");\r\n        this.platform = this.tileMap.createLayer(\r\n            \"scene\" + this.number,\r\n            this.tileSet!\r\n        ) as Phaser.Tilemaps.TilemapLayer;\r\n        if( !this.platform ) throw(\"Failed to creat platform layer\");\r\n        this.objectsLayer = this.tileMap.getObjectLayer(\"objects\");\r\n\r\n        this.platform?.setCollisionByExclusion([-1]);\r\n        this.batGroup = this.add.group();\r\n        this.zombieGroup = this.add.group();\r\n        this.foesGroup = this.add.group();\r\n        this.turnGroup = this.add.group();\r\n        this.exitGroup = this.add.group();\r\n        this.platformGroup = this.add.group();\r\n        this.lunchBoxGroup = this.add.group();\r\n        this.bricks = this.add.group();\r\n\r\n        this.addsObjects();\r\n        this.addColliders();\r\n    }\r\n\r\n    addsObjects() {\r\n        this.objectsLayer?.objects.forEach((object) => {\r\n            if (!object.x || !object.y)\r\n                throw(\"bat object not defined correctly\");\r\n\r\n            if (object.name === \"bat\") {\r\n                const bat = new Bat(this, object.x, object.y, object.type)\r\n                this.batGroup.add(bat);\r\n                this.foesGroup.add(bat);\r\n            }\r\n\r\n            if (object.name === \"zombie\") {\r\n                const zombie = new Zombie(this, object.x, object.y, object.type);\r\n                this.zombieGroup.add(zombie);\r\n                this.foesGroup.add(zombie);\r\n            }\r\n\r\n            if (object.name === \"platform\") {\r\n                this.platformGroup.add(\r\n                    new Platform(this, object.x, object.y, +object.type)\r\n                )\r\n            }\r\n\r\n            if (object.name === \"turn\") {\r\n                this.turnGroup.add(new Turn(this, object.x, object.y));\r\n            }\r\n\r\n            if (object.name === \"lunchbox\") {\r\n                this.lunchBoxGroup.add(new LunchBox(this, object.x, object.y));\r\n            }\r\n\r\n            if (object.name === \"text\") {\r\n                this.add\r\n                    .bitmapText(object.x, object.y, \"pixelFont\", object.text.text, 30)\r\n                    .setDropShadow(2, 4, 0x222222, 0.9)\r\n                    .setOrigin(0);\r\n            }\r\n\r\n            if (object.name === \"exit\") {\r\n                this.exitGroup.add(\r\n                    new Turn(this, object.x, object.y, object.width, object.height, object.type).setOrigin(0.5)\r\n                )\r\n            }\r\n        });\r\n    }\r\n\r\n    addColliders() {\r\n        this.physics.add.collider(\r\n            this.batGroup,\r\n            this.platform,\r\n            this.turnFoe as Phaser.Types.Physics.Arcade.ArcadePhysicsCallback,\r\n            () => {\r\n                return true;\r\n            },\r\n            this\r\n        );\r\n\r\n        this.physics.add.collider(\r\n            this.zombieGroup,\r\n            this.bricks,\r\n            this.turnFoe as Phaser.Types.Physics.Arcade.ArcadePhysicsCallback,\r\n            () => {\r\n                return true;\r\n            },\r\n            this\r\n        );\r\n\r\n        this.physics.add.collider(\r\n            this.batGroup,\r\n            this.bricks,\r\n            this.turnFoe as Phaser.Types.Physics.Arcade.ArcadePhysicsCallback,\r\n            () => {\r\n                return true;\r\n            },\r\n            this\r\n        );\r\n\r\n        this.physics.add.collider(\r\n            this.zombieGroup,\r\n            this.turnGroup,\r\n            this.turnFoe as Phaser.Types.Physics.Arcade.ArcadePhysicsCallback,\r\n            () => {\r\n                return true;\r\n            },\r\n            this\r\n        );\r\n\r\n        this.physics.add.collider(\r\n            this.zombieGroup,\r\n            this.platform,\r\n            this.hitFloor as Phaser.Types.Physics.Arcade.ArcadePhysicsCallback,\r\n            () => {\r\n                return true;\r\n            },\r\n            this\r\n        );\r\n    }\r\n\r\n    turnFoe(foe: Bat | Zombie, _platform: Platform) {\r\n        foe.turn();\r\n    }\r\n\r\n    // hitFloor() {}\r\n\r\n    addPlayer() {\r\n        this.elements = this.add.group();\r\n        this.coins = this.add.group();\r\n\r\n        const playerPosition = this.objectsLayer?.objects.find(\r\n            (object) => object.name === \"player\"\r\n        );\r\n        if(!playerPosition || !playerPosition.x || !playerPosition.y) throw(\"Unable to get player position\");\r\n        this.player = new Player(this, playerPosition.x, playerPosition.y, 0);\r\n\r\n        this.physics.add.collider(\r\n            this.player as any, // TODO: fix type here\r\n            this.platform,\r\n            this.hitFloor as Phaser.Types.Physics.Arcade.ArcadePhysicsCallback,\r\n            () => {\r\n                return true;\r\n            },\r\n            this\r\n        );\r\n\r\n        this.physics.add.collider(\r\n            this.player as any,\r\n            this.platformGroup,\r\n            this.hitFloor as Phaser.Types.Physics.Arcade.ArcadePhysicsCallback,\r\n            () => {\r\n                return true;\r\n            },\r\n            this\r\n        );\r\n\r\n        this.physics.add.collider(\r\n            this.player as any,\r\n            this.bricks,\r\n            this.hitFloor as Phaser.Types.Physics.Arcade.ArcadePhysicsCallback,\r\n            () => {\r\n                return true\r\n            },\r\n            this\r\n        );\r\n\r\n        this.physics.add.overlap(\r\n            this.player as any,\r\n            this.coins,\r\n            this.pickCoin as Phaser.Types.Physics.Arcade.ArcadePhysicsCallback,\r\n            () => {\r\n                return true;\r\n            },\r\n            this\r\n        );\r\n\r\n        this.physics.add.overlap(\r\n            this.player as any,\r\n            this.lunchBoxGroup,\r\n            this.pickLunchBox as Phaser.Types.Physics.Arcade.ArcadePhysicsCallback,\r\n            () => {\r\n                return true;\r\n            },\r\n            this\r\n        );\r\n\r\n        this.physics.add.overlap(\r\n            this.player as any,\r\n            this.exitGroup,\r\n            () => {\r\n                this.playAudio(\"stage\");\r\n                this.time.delayedCall(1000, () => this.finishScene(), undefined, this);\r\n            },\r\n            () => {\r\n                return true;\r\n            },\r\n            this\r\n        );\r\n\r\n        this.blows = this.add.group();\r\n\r\n        this.physics.add.overlap(\r\n            this.blows,\r\n            this.platform,\r\n            this.blowPlatform as Phaser.Types.Physics.Arcade.ArcadePhysicsCallback,\r\n            () => {\r\n                return true;\r\n            },\r\n            this\r\n        );\r\n\r\n        this.physics.add.overlap(\r\n            this.blows,\r\n            this.bricks,\r\n            this.blowBrick as Phaser.Types.Physics.Arcade.ArcadePhysicsCallback,\r\n            () => {\r\n                return true;\r\n            },\r\n            this\r\n        );\r\n\r\n        this.physics.add.overlap(\r\n            this.blows,\r\n            this.foesGroup,\r\n            this.blowFoe as Phaser.Types.Physics.Arcade.ArcadePhysicsCallback,\r\n            () => {\r\n                return true;\r\n            },\r\n            this\r\n        );\r\n\r\n        this.physics.add.overlap(\r\n            this.bricks,\r\n            this.foesGroup,\r\n            this.foeBlowBrick as Phaser.Types.Physics.Arcade.ArcadePhysicsCallback,\r\n            () => {\r\n                return true;\r\n            },\r\n            this\r\n        );\r\n\r\n        this.physics.add.collider(\r\n            this.player as any,\r\n            this.batGroup,\r\n            this.hitPlayer as Phaser.Types.Physics.Arcade.ArcadePhysicsCallback,\r\n            () => {\r\n                return true;\r\n            },\r\n            this\r\n        );\r\n\r\n        this.physics.add.collider(\r\n            this.player as any,\r\n            this.zombieGroup,\r\n            this.hitPlayer as Phaser.Types.Physics.Arcade.ArcadePhysicsCallback,\r\n            () => {\r\n                return true;\r\n            },\r\n            this\r\n        );\r\n    }\r\n\r\n    pickCoin(_player: Player, coin: Coin) {\r\n        if(!coin.disabled) {\r\n            coin.pick();\r\n            this.playAudio(\"coin\");\r\n            this.updateCoins();\r\n        }\r\n    }\r\n\r\n    pickLunchBox(_player: Player, lunchbox: LunchBox) {\r\n        if (!lunchbox.disabled) {\r\n            this.playAudio(\"lunchbox\");\r\n            lunchbox.pick();\r\n        }\r\n    }\r\n\r\n    hitPlayer(player: Player, foe: Bat | Zombie) {\r\n        if (player.invincible) {\r\n            foe.death();\r\n            this.playAudio(\"foedeath\");\r\n        } else if (!player.dead && this.number > 0) {\r\n            player.die();\r\n            this.playAudio(\"death\");\r\n        }\r\n    }\r\n\r\n    blowFoe(_blow: Blow, foe: Bat | Zombie) {\r\n        this.playAudio(\"kill\");\r\n        this.playAudio(\"foedeath\");\r\n        foe.death();\r\n    }\r\n\r\n    foeBlowBrick(brick: Brick, foe: Bat | Zombie) {\r\n        foe.turn();\r\n        Array(Phaser.Math.Between(4, 6))\r\n            .fill(0)\r\n            .forEach(() => new Debris(this, brick.x, brick.y));\r\n        brick.destroy();\r\n    }\r\n\r\n    blowPlatform(blow: Blow, platform: Platform) {\r\n        const tile = this.getTile(platform);\r\n        if (this.isBreakable(tile)) {\r\n            this.playAudioRandomly(\"stone_fail\");\r\n            this.playAudioRandomly(\"stone\");\r\n            if (this.player?.mjolnir) this.cameras.main.shake(30);\r\n            blow.destroy();\r\n            Array(Phaser.Math.Between(4, 6))\r\n                .fill(0)\r\n                .forEach(() => new Debris(this, tile.pixelX, tile.pixelY));\r\n            this.platform.removeTileAt(tile.x, tile.y);\r\n            this.spawnCoin(tile);\r\n        }\r\n    }\r\n\r\n    getTile(platform: Platform) {\r\n        const  { x, y } = platform;\r\n        return this.platform.getTileAt(x, y);\r\n    }\r\n\r\n    isBreakable(tile?: Phaser.Tilemaps.Tile) {\r\n        return tile?.properties[\"element\"] === \"break\";\r\n    }\r\n\r\n    spawnCoin(tile: Phaser.Tilemaps.Tile) {\r\n        if (Phaser.Math.Between(0, 11) > 5) {\r\n            this.time.delayedCall(\r\n                500,\r\n                () => {\r\n                    this.coins.add(new Coin(this, tile.pixelX, tile.pixelY));\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    blowBrick(blow: Blow, brick: Brick) {\r\n        if (this.player?.mjolnir) this.cameras.main.shake(30);\r\n        this.playAudio(\"stone_fail\");\r\n        this.playAudioRandomly(\"stone\");\r\n        blow.destroy();\r\n        Array(Phaser.Math.Between(4, 6))\r\n            .fill(0)\r\n            .forEach(() => new Debris(this, brick.x, brick.y));\r\n        brick.destroy();\r\n    }\r\n\r\n    hitFloor(_player: Player, platform: Platform) {\r\n        if (\r\n            this.player?.jumping &&\r\n            !this.player.falling &&\r\n            this.player.body?.velocity.y === 0\r\n        ) {\r\n            const tile = this.getTile(platform);\r\n            if (this.isBreakable(tile)) {\r\n                this.playAudioRandomly(\"stone\");\r\n                Array(Phaser.Math.Between(4, 6))\r\n                    .fill(0)\r\n                    .forEach(() => new Debris(this, tile.pixelX, tile.pixelY));\r\n                this.platform.removeTileAt(tile.x, tile.y);\r\n            } else if (platform.name === \"brick0\") {\r\n                this.playAudioRandomly(\"stone\");\r\n                Array(Phaser.Math.Between(4, 6))\r\n                    .fill(0)\r\n                    .forEach(() => new Debris(this, platform.x, platform.y));\r\n                platform.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    loadAudios() {\r\n        this.audios = {\r\n            build       : this.sound.add('build'),\r\n            coin        : this.sound.add('coin'),\r\n            death       : this.sound.add('death'),\r\n            jump        : this.sound.add('jump'),\r\n            kill        : this.sound.add('kill'),\r\n            land        : this.sound.add('land'),\r\n            lunchbox    : this.sound.add('lunchbox'),\r\n            prize       : this.sound.add('prize'),\r\n            stone_fail: this.sound.add('stone_fail'),\r\n            stone       : this.sound.add('stone'),\r\n            foedeath    : this.sound.add('foedeath'),\r\n            stage       : this.sound.add('stage'),\r\n        };\r\n    }\r\n\r\n    playAudio(key: string) {\r\n        this.audios[key].play();\r\n    }\r\n\r\n    playAudioRandomly(key: string) {\r\n        const volume = Phaser.Math.Between(0.8, 1);\r\n        const rate = Phaser.Math.Between(0.8, 1);\r\n        this.audios[key].play({ volume, rate });\r\n    }\r\n\r\n    playMusic() {\r\n        this.theme = this.sound.add(\"music\" + this.number);\r\n        this.theme.stop();\r\n        this.theme.play({\r\n            mute: false,\r\n            volume: 0.7,\r\n            rate: 1,\r\n            detune: 0,\r\n            seek: 0,\r\n            loop: true,\r\n            delay: 0\r\n        });\r\n    }\r\n\r\n    override update() {\r\n        this.player?.update();\r\n        if (this.number === 3 && this.player && this.player.y > 1500) this.restartScene();\r\n    }\r\n\r\n    finishScene() {\r\n        if (this.theme) this.theme.stop;\r\n        this.scene.start(\"transition\", { name: \"STAGE\", number: this.number + 1 });\r\n    }\r\n\r\n    restartScene() {\r\n        this.time.delayedCall(\r\n            1000,\r\n            () => {\r\n                if (this.theme) this.theme.stop();\r\n                this.scene.start(\"transition\", { name: \"STAGE\", number: this.number });\r\n            },\r\n            undefined,\r\n            this\r\n        );\r\n    }\r\n\r\n    updateCoins() {\r\n        const coins = +this.registry.get(\"coins\") + 1;\r\n        this.registry.set(\"coins\", coins);\r\n        this.scoreCoins.setText(\"x\" + coins);\r\n        this.tweens.add({\r\n            targets: [this.scoreCoins, this.scoreCoinsLogo],\r\n            scale: { from: 1.4, to: 1},\r\n            duration: 50,\r\n            repeat: 10,\r\n        });\r\n    }\r\n}", "import { Debris } from \"../gameobjects/particle.ts\";\r\n\r\nexport default class Splash extends Phaser.Scene {\r\n    width!: number;\r\n    height!: number;\r\n    center_width!: number;\r\n    center_height!: number;\r\n    theme?: Phaser.Sound.NoAudioSound | Phaser.Sound.HTML5AudioSound | Phaser.Sound.WebAudioSound;\r\n    space!: Phaser.GameObjects.BitmapText;\r\n\r\n    constructor() {\r\n        super({ key: \"splash\" });\r\n    }\r\n\r\n    create() {\r\n        this.width = +this.sys.game.config.width;\r\n        this.height = +this.sys.game.config.height;\r\n        this.center_width = this.width / 2;\r\n        this.center_height = this.height / 2;\r\n\r\n        this.cameras.main.setBackgroundColor(0x000000);\r\n        this.time.delayedCall(1000, ()=> this.showInstructions(), undefined, this);\r\n        \r\n        this.input.keyboard?.on(\"keydown-SPACE\", ()=> this.startGame(), this);\r\n        this.input.keyboard?.on(\"keydown-ENTER\", ()=> this.startGame(), this);\r\n        this.playMusic();\r\n        this.showTitle();\r\n        this.playAudioRandomly(\"stone\");\r\n    }\r\n\r\n    startGame() {\r\n        if (this.theme) this.theme.stop();\r\n        this.scene.start(\"transition\", {\r\n            next: \"game\",\r\n            name: \"STAGE\",\r\n            number: 0,\r\n            time: 30,\r\n        });\r\n    }\r\n\r\n    showTitle() {\r\n        \"WALL\".split(\"\").forEach((letter, i) => {\r\n            this.time.delayedCall(\r\n                200 * (i + 1),\r\n                () => {\r\n                    this.playAudioRandomly(\"stone_fail\");\r\n\r\n                    if (Phaser.Math.Between(0, 5) > 2) this.playAudioRandomly(\"stone\");\r\n                    const text = this.add\r\n                        .bitmapText(130 * (i + 1) + 140, 200, \"hammerfont\", letter, 170)\r\n                        .setTint(0xca6702)\r\n                        .setOrigin(0.5)\r\n                        .setDropShadow(4, 6, 0xf09937, 0.9);\r\n                    Array(Phaser.Math.Between(4, 6))\r\n                        .fill(0)\r\n                        .forEach(() => new Debris(this, text.x, text.y, 0xca6702));\r\n                },\r\n                undefined,\r\n                this\r\n            );\r\n        });\r\n\r\n        \"HAMMER\".split(\"\").forEach((letter, i) => {\r\n            this.time.delayedCall(\r\n                200 * (i + 1) + 800,\r\n                () => {\r\n                    this.playAudioRandomly(\"stone_fail\");\r\n\r\n                    if (Phaser.Math.Between(0, 5) > 2) this.playAudioRandomly(\"stone\");\r\n                    const text = this.add\r\n                        .bitmapText(130 * (i + 1), 350, \"hammerfont\", letter, 170)\r\n                        .setTint(0xca6702)\r\n                        .setOrigin(0.5)\r\n                        .setDropShadow(4, 6, 0xf09937, 0.9);\r\n                    Array(Phaser.Math.Between(4, 6))\r\n                        .fill(0)\r\n                        .forEach(() => new Debris(this, text.x, text.y, 0xca6702));\r\n                },\r\n                undefined,\r\n                this\r\n            );\r\n        });\r\n    }\r\n\r\n    playAudioRandomly(key: string) {\r\n        const volume = Phaser.Math.Between(0.8, 1);\r\n        const rate = 1;\r\n        this.sound.add(key).play({ volume, rate });\r\n    }\r\n\r\n    playMusic() {\r\n        this.theme = this.sound.add(\"splash\");\r\n        this.theme.stop();\r\n        this.theme.play({\r\n            mute: false,\r\n            volume: 1,\r\n            rate: 1,\r\n            detune: 0,\r\n            seek: 0,\r\n            loop: true,\r\n            delay: 0\r\n        });\r\n    }\r\n\r\n    showInstructions() {\r\n        this.add\r\n            .bitmapText(this.center_width, 450, \"pixelFont\", \"WASD/Arrows: move\", 30)\r\n            .setOrigin(0.5);\r\n        this.add\r\n            .bitmapText(this.center_width, 500, \"pixelFont\", \"S/DOWN: BUILD WALL\", 30)\r\n            .setOrigin(0.5);\r\n        this.add\r\n            .bitmapText(this.center_width, 550, \"pixelFont\", \"SPACE: HAMMER\", 30)\r\n            .setOrigin(0.5);\r\n        this.add\r\n            .sprite(this.center_width - 120, 620, \"pello\")\r\n            .setOrigin(0.5)\r\n            .setScale(0.3);\r\n        this.add\r\n            .bitmapText(this.center_width + 40, 620, \"pixelFont\", \"By PELLO\", 15)\r\n            .setOrigin(0.5);\r\n        this.space = this.add\r\n            .bitmapText(this.center_width, 670, \"pixelFont\", \"Press SPACE to start\", 30)\r\n            .setOrigin(0.5);\r\n        this.tweens.add({\r\n            targets: this.space,\r\n            duration: 300,\r\n            alpha: { from: 0, to: 1 },\r\n            repeat: -1,\r\n            yoyo: true,\r\n        });\r\n    }\r\n}", "export default class Transition extends Phaser.Scene {\r\n    name!: string;\r\n    number!: number;\r\n    next!: Phaser.Scene;\r\n\r\n    width!: number;\r\n    height!: number;\r\n    center_width!: number;\r\n    center_height!: number;\r\n\r\n    scoreCoins: Phaser.GameObjects.BitmapText | undefined;\r\n    scoreCoinsLogo: Phaser.GameObjects.Sprite | undefined;\r\n\r\n    constructor() {\r\n        super({ key: \"transition\" });\r\n    }\r\n\r\n    init(data: {name: string, number: number, next: Phaser.Scene}) {\r\n        this.name = data.name;\r\n        this.number = data.number;\r\n        this.next = data.next;\r\n    }\r\n\r\n    create() {\r\n        const messages = [\"TUTORIAL\", \"STAGE 1\", \"STAGE 2\", \"STAGE 3\", \"STAGE 4\"];\r\n        this.width = +this.sys.game.config.width;\r\n        this.height = +this.sys.game.config.height;\r\n        this.center_width = this.width / 2;\r\n        this.center_height = this.height / 2;\r\n\r\n        if (this.number === 5) this.loadOutro();\r\n\r\n        this.addScore();\r\n\r\n        this.add.sprite(this.center_width, this.center_height - 170, \"walt\");\r\n        this.add.bitmapText(this.center_width, this.center_height - 20, \"pixelFont\", messages[this.number], 40)\r\n            .setOrigin(0.5);\r\n        this.add.bitmapText(this.center_width, this.center_height + 20, \"pixelFont\", \"Ready?\", 30)\r\n            .setOrigin(0.5);\r\n        this.input.keyboard?.on(\"keydown-ENTER\", () => this.loadNext(), this);\r\n        this.input.keyboard?.on(\"keydown-SPACE\", () => this.loadNext(), this);\r\n        this.time.delayedCall(\r\n            3000,\r\n            () => {\r\n                this.loadNext();\r\n            },\r\n            undefined,\r\n            this\r\n        );\r\n    }\r\n\r\n    loadNext() {\r\n        this.scene.start(\"game\", { name: this.name, number: this.number });\r\n    }\r\n\r\n    loadOutro() {\r\n        this.scene.start(\"outro\", { name: this.name, number: this.number });\r\n    }\r\n\r\n    addScore() {\r\n        this.scoreCoins = this.add\r\n            .bitmapText(\r\n                this.center_width + 32,\r\n                this.center_height - 100,\r\n                \"pixelFont\",\r\n                \"x\" + this.registry.get(\"coins\"),\r\n                30\r\n            )\r\n            .setDropShadow(0, 4, 0x222222, 0.9)\r\n            .setOrigin(0.5)\r\n            .setScrollFactor(0);\r\n        \r\n        this.scoreCoinsLogo = this.add\r\n            .sprite(this.center_width - 32, this.center_height - 100, \"coin\")\r\n            .setScale(0.7)\r\n            .setOrigin(0.5)\r\n            .setScrollFactor(0);\r\n        \r\n        this.anims.create({\r\n            key: \"coinscore\",\r\n            frames: this.anims.generateFrameNumbers(\"coin\", { start: 0, end: 7 }),\r\n            frameRate: 8\r\n        });\r\n        this.scoreCoinsLogo.play({ key: \"coinscore\", repeat: -1 });\r\n    }\r\n}", "export default class Outro extends Phaser.Scene {\r\n    width!: number;\r\n    height!: number;\r\n    center_width!: number;\r\n    center_height!: number;\r\n    introLayer!: Phaser.GameObjects.Layer;\r\n    splashLayer!: Phaser.GameObjects.Layer;\r\n    text!: string[];\r\n\r\n    constructor() {\r\n        super({ key: \"outro\" });\r\n    }\r\n\r\n    create() {\r\n        this.width = +this.sys.game.config.width;\r\n        this.height = +this.sys.game.config.height;\r\n        this.center_width = this.width / 2;\r\n        this.center_height = this.height / 2;\r\n        this.introLayer = this.add.layer();\r\n        this.splashLayer = this.add.layer();\r\n        this.text = [\r\n            \"You did it!!\",\r\n            \"Thanks to your building skills\",\r\n            \"and your mighty hammer,\",\r\n            \"you saved the earth.\",\r\n            \"Made in 3 days for Minijam\",\r\n            \"by Pello\",\r\n            \"\",\r\n            \"Press SPACE\"\r\n        ];\r\n        this.showHistory();\r\n\r\n        this.input.keyboard?.on(\"keydown-SPACE\", this.startSplash, this);\r\n        this.input.keyboard?.on(\"keydown-ENTER\", this.startSplash, this);\r\n    }\r\n\r\n    startSplash() {\r\n        this.scene.start(\"splash\");\r\n    }\r\n\r\n    showHistory() {\r\n        this.text.forEach((line, i) => {\r\n            this.time.delayedCall(\r\n                (i + 1) * 2000,\r\n                () => this.showLine(line, (i + 1) * 70),\r\n                undefined,\r\n                this\r\n            );\r\n        });\r\n    }\r\n\r\n    showLine(text: string, y: number) {\r\n        const line = this.introLayer.add(\r\n            this.add\r\n                .bitmapText(this.center_width, y, \"pixelFont\", text, 25)\r\n                .setOrigin(0.5)\r\n                .setAlpha(0)\r\n        );\r\n        this.tweens.add({\r\n            targets: line,\r\n            duration: 2000,\r\n            alpha: 1,\r\n        });\r\n    }\r\n}"],
  "mappings": "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",
  "names": ["Phaser", "Phaser"]
}
